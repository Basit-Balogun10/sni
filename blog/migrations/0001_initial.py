# Generated by Django 3.1.5 on 2021-07-24 05:33

import blog.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('body', models.TextField()),
                ('image', models.ImageField(upload_to=blog.models.upload_location)),
                ('date_published', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('author_img', models.ImageField(upload_to=blog.models.upload_location)),
                ('category', models.CharField(choices=[('history', 'HISTORY'), ('politics-and-international-relations', 'POLITICS & INTERNATIONAL RELATIONS'), ('society-and-culture', 'SOCIETY & CULTURE'), ('science-and-technology', 'SCIENCE & TECHNOLOGY'), ('art-and-literature', 'ART & LITERATURE'), ('business-and-economics', 'BUSINESS & ECONOMICS')], max_length=50)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_posts', to=settings.AUTH_USER_MODEL)),
                ('disliked', models.ManyToManyField(blank=True, default=None, editable=False, related_name='disliked', to=settings.AUTH_USER_MODEL)),
                ('liked', models.ManyToManyField(blank=True, default=None, editable=False, related_name='liked', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_body', tinymce.models.HTMLField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True, editable=False)),
                ('new', models.BooleanField(default=True, editable=False)),
                ('commenter', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.blogpost')),
            ],
            options={
                'ordering': ['created_on', 'commenter'],
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', tinymce.models.HTMLField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True, editable=False)),
                ('new', models.BooleanField(default=True, editable=False)),
                ('comment', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.comment')),
                ('replier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'replies',
                'ordering': ['created_on', 'replier'],
            },
        ),
        migrations.CreateModel(
            name='ReplyReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('racism', 'Racism'), ('nudity', 'Nudity'), ('sexual harrasment', 'Sexual harrasment'), ('false information', 'False information'), ('spam', "It's spam"), ('hate speech or symbols', 'Hate speech or symbols'), ('bullying', 'Bullying'), ('scam or fraud', 'Scam or fraud'), ('violence', 'Violence'), ('sale of illegal or regulated goods', 'Sale of illegal or regulated goods')], max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('new', models.BooleanField(default=True, editable=False)),
                ('reviewed', models.BooleanField(default=False, editable=False)),
                ('good', models.BooleanField(default=False, editable=False)),
                ('bad', models.BooleanField(default=False, editable=False)),
                ('reply', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='reply_reports', to='blog.reply')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reply_reporter', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.AddField(
            model_name='reply',
            name='reports',
            field=models.ManyToManyField(blank=True, default=None, related_name='reply_reports', through='blog.ReplyReport', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PostReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('racism', 'Racism'), ('nudity', 'Nudity'), ('sexual harrasment', 'Sexual harrasment'), ('false information', 'False information'), ('spam', "It's spam"), ('hate speech or symbols', 'Hate speech or symbols'), ('bullying', 'Bullying'), ('scam or fraud', 'Scam or fraud'), ('violence', 'Violence'), ('sale of illegal or regulated goods', 'Sale of illegal or regulated goods')], max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('new', models.BooleanField(default=True, editable=False)),
                ('reviewed', models.BooleanField(default=False, editable=False)),
                ('good', models.BooleanField(default=True, editable=False)),
                ('bad', models.BooleanField(default=False, editable=False)),
                ('post', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='post_reports', to='blog.blogpost')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reporter', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(choices=[('Like', 'Like'), ('Unlike', 'Unlike')], default='Like', editable=False, max_length=10)),
                ('date_liked', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='blog.blogpost')),
            ],
        ),
        migrations.CreateModel(
            name='Dislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(choices=[('Like', 'Like'), ('Unlike', 'Unlike')], default='Like', editable=False, max_length=10)),
                ('date_disliked', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='blog.blogpost')),
            ],
        ),
        migrations.CreateModel(
            name='CommentReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('racism', 'Racism'), ('nudity', 'Nudity'), ('sexual harrasment', 'Sexual harrasment'), ('false information', 'False information'), ('spam', "It's spam"), ('hate speech or symbols', 'Hate speech or symbols'), ('bullying', 'Bullying'), ('scam or fraud', 'Scam or fraud'), ('violence', 'Violence'), ('sale of illegal or regulated goods', 'Sale of illegal or regulated goods')], max_length=50)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('new', models.BooleanField(default=True, editable=False)),
                ('reviewed', models.BooleanField(default=False, editable=False)),
                ('good', models.BooleanField(default=False, editable=False)),
                ('bad', models.BooleanField(default=False, editable=False)),
                ('comment', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='comment_reports', to='blog.comment')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_reporter', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='reports',
            field=models.ManyToManyField(blank=True, default=None, related_name='comment_reports', through='blog.CommentReport', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='reports',
            field=models.ManyToManyField(blank=True, default=None, related_name='post_reports', through='blog.PostReport', to=settings.AUTH_USER_MODEL),
        ),
    ]
